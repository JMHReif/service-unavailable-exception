/Users/jenniferreif/.sdkman/candidates/java/20.0.2-open/bin/java -XX:TieredStopAtLevel=1 -Dspring.output.ansi.enabled=always -Dcom.sun.management.jmxremote -Dspring.jmx.enabled=true -Dspring.liveBeansView.mbeanDomain -Dspring.application.admin.enabled=true -Dmanagement.endpoints.jmx.exposure.include=* -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=63761:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8 -classpath /Users/jenniferreif/Downloads/service-unavailable-exception/target/classes:/Users/jenniferreif/.m2/repository/org/springframework/boot/spring-boot-starter-data-neo4j/3.1.2/spring-boot-starter-data-neo4j-3.1.2.jar:/Users/jenniferreif/.m2/repository/org/springframework/boot/spring-boot-starter/3.1.2/spring-boot-starter-3.1.2.jar:/Users/jenniferreif/.m2/repository/org/springframework/boot/spring-boot/3.1.2/spring-boot-3.1.2.jar:/Users/jenniferreif/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.1.2/spring-boot-autoconfigure-3.1.2.jar:/Users/jenniferreif/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.1.2/spring-boot-starter-logging-3.1.2.jar:/Users/jenniferreif/.m2/repository/ch/qos/logback/logback-classic/1.4.8/logback-classic-1.4.8.jar:/Users/jenniferreif/.m2/repository/ch/qos/logback/logback-core/1.4.8/logback-core-1.4.8.jar:/Users/jenniferreif/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.20.0/log4j-to-slf4j-2.20.0.jar:/Users/jenniferreif/.m2/repository/org/apache/logging/log4j/log4j-api/2.20.0/log4j-api-2.20.0.jar:/Users/jenniferreif/.m2/repository/org/slf4j/jul-to-slf4j/2.0.7/jul-to-slf4j-2.0.7.jar:/Users/jenniferreif/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/jenniferreif/.m2/repository/org/yaml/snakeyaml/1.33/snakeyaml-1.33.jar:/Users/jenniferreif/.m2/repository/org/springframework/data/spring-data-neo4j/7.1.2/spring-data-neo4j-7.1.2.jar:/Users/jenniferreif/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/jenniferreif/.m2/repository/org/apiguardian/apiguardian-api/1.1.1/apiguardian-api-1.1.1.jar:/Users/jenniferreif/.m2/repository/org/neo4j/neo4j-cypher-dsl/2023.2.0/neo4j-cypher-dsl-2023.2.0.jar:/Users/jenniferreif/.m2/repository/org/neo4j/driver/neo4j-java-driver/5.9.0/neo4j-java-driver-5.9.0.jar:/Users/jenniferreif/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/jenniferreif/.m2/repository/io/netty/netty-handler/4.1.94.Final/netty-handler-4.1.94.Final.jar:/Users/jenniferreif/.m2/repository/io/netty/netty-common/4.1.94.Final/netty-common-4.1.94.Final.jar:/Users/jenniferreif/.m2/repository/io/netty/netty-resolver/4.1.94.Final/netty-resolver-4.1.94.Final.jar:/Users/jenniferreif/.m2/repository/io/netty/netty-buffer/4.1.94.Final/netty-buffer-4.1.94.Final.jar:/Users/jenniferreif/.m2/repository/io/netty/netty-transport/4.1.94.Final/netty-transport-4.1.94.Final.jar:/Users/jenniferreif/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.94.Final/netty-transport-native-unix-common-4.1.94.Final.jar:/Users/jenniferreif/.m2/repository/io/netty/netty-codec/4.1.94.Final/netty-codec-4.1.94.Final.jar:/Users/jenniferreif/.m2/repository/io/netty/netty-tcnative-classes/2.0.61.Final/netty-tcnative-classes-2.0.61.Final.jar:/Users/jenniferreif/.m2/repository/io/projectreactor/reactor-core/3.5.8/reactor-core-3.5.8.jar:/Users/jenniferreif/.m2/repository/org/springframework/spring-beans/6.0.11/spring-beans-6.0.11.jar:/Users/jenniferreif/.m2/repository/org/springframework/spring-context/6.0.11/spring-context-6.0.11.jar:/Users/jenniferreif/.m2/repository/org/springframework/spring-tx/6.0.11/spring-tx-6.0.11.jar:/Users/jenniferreif/.m2/repository/org/springframework/data/spring-data-commons/3.1.2/spring-data-commons-3.1.2.jar:/Users/jenniferreif/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/jenniferreif/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.1.2/spring-boot-starter-web-3.1.2.jar:/Users/jenniferreif/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.1.2/spring-boot-starter-json-3.1.2.jar:/Users/jenniferreif/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.2/jackson-databind-2.15.2.jar:/Users/jenniferreif/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.2/jackson-annotations-2.15.2.jar:/Users/jenniferreif/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.2/jackson-core-2.15.2.jar:/Users/jenniferreif/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.2/jackson-datatype-jdk8-2.15.2.jar:/Users/jenniferreif/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.2/jackson-datatype-jsr310-2.15.2.jar:/Users/jenniferreif/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.2/jackson-module-parameter-names-2.15.2.jar:/Users/jenniferreif/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.1.2/spring-boot-starter-tomcat-3.1.2.jar:/Users/jenniferreif/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.11/tomcat-embed-core-10.1.11.jar:/Users/jenniferreif/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.11/tomcat-embed-el-10.1.11.jar:/Users/jenniferreif/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.11/tomcat-embed-websocket-10.1.11.jar:/Users/jenniferreif/.m2/repository/org/springframework/spring-web/6.0.11/spring-web-6.0.11.jar:/Users/jenniferreif/.m2/repository/io/micrometer/micrometer-observation/1.11.2/micrometer-observation-1.11.2.jar:/Users/jenniferreif/.m2/repository/io/micrometer/micrometer-commons/1.11.2/micrometer-commons-1.11.2.jar:/Users/jenniferreif/.m2/repository/org/springframework/spring-webmvc/6.0.11/spring-webmvc-6.0.11.jar:/Users/jenniferreif/.m2/repository/org/springframework/spring-aop/6.0.11/spring-aop-6.0.11.jar:/Users/jenniferreif/.m2/repository/org/springframework/spring-expression/6.0.11/spring-expression-6.0.11.jar:/Users/jenniferreif/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/Users/jenniferreif/.m2/repository/org/springframework/spring-core/6.0.11/spring-core-6.0.11.jar:/Users/jenniferreif/.m2/repository/org/springframework/spring-jcl/6.0.11/spring-jcl-6.0.11.jar com.jmhreif.serviceunavailableexception.ServiceUnavailableExceptionApplication

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.2)

2023-08-11T15:27:08.572-05:00  INFO 16582 --- [           main] s.ServiceUnavailableExceptionApplication : Starting ServiceUnavailableExceptionApplication using Java 20.0.2 with PID 16582 (/Users/jenniferreif/Downloads/service-unavailable-exception/target/classes started by jenniferreif in /Users/jenniferreif/Downloads/service-unavailable-exception)
2023-08-11T15:27:08.579-05:00  INFO 16582 --- [           main] s.ServiceUnavailableExceptionApplication : No active profile set, falling back to 1 default profile: "default"
2023-08-11T15:27:09.246-05:00  INFO 16582 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-08-11T15:27:09.422-05:00  INFO 16582 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 170 ms. Found 0 Neo4j repository interfaces.
2023-08-11T15:27:09.503-05:00  INFO 16582 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-08-11T15:27:09.537-05:00  INFO 16582 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 31 ms. Found 1 Neo4j repository interfaces.
2023-08-11T15:27:09.943-05:00  INFO 16582 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-08-11T15:27:09.950-05:00  INFO 16582 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-08-11T15:27:09.951-05:00  INFO 16582 --- [           main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.11]
2023-08-11T15:27:10.019-05:00  INFO 16582 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-08-11T15:27:10.019-05:00  INFO 16582 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1353 ms
2023-08-11T15:27:10.260-05:00  INFO 16582 --- [           main] o.neo4j.driver.internal.DriverFactory    : Routing driver instance 473163048 created for server address 408637a4.databases.neo4j.io:7687
2023-08-11T15:27:11.050-05:00  INFO 16582 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-08-11T15:27:11.058-05:00  INFO 16582 --- [           main] s.ServiceUnavailableExceptionApplication : Started ServiceUnavailableExceptionApplication in 2.925 seconds (process running for 3.593)
2023-08-11T15:27:14.129-05:00  INFO 16582 --- [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-11T15:27:14.129-05:00  INFO 16582 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-08-11T15:27:14.131-05:00  INFO 16582 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2023-08-11T15:27:15.152-05:00 DEBUG 16582 --- [nio-8080-exec-1] org.springframework.data.neo4j.cypher    : Executing:
MATCH (book:`Book`) WITH collect(toString(id(book))) AS __sn__ RETURN __sn__
2023-08-11T15:27:15.523-05:00  WARN 16582 --- [nio-8080-exec-1] org.springframework.data.neo4j.cypher    : Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (book:`Book`) WITH collect(toString(id(book))) AS __sn__ RETURN __sn__
	                                          ^
The query used a deprecated function: `id`.
2023-08-11T15:27:15.535-05:00 DEBUG 16582 --- [nio-8080-exec-1] org.springframework.data.neo4j.cypher    : Executing:
MATCH (book:`Book`) OPTIONAL MATCH (book)<-[__sr__:`AUTHORED`]-(__srn__:`Author`) WITH collect(toString(id(book))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
2023-08-11T15:27:16.053-05:00  WARN 16582 --- [nio-8080-exec-1] org.springframework.data.neo4j.cypher    : Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (book:`Book`) OPTIONAL MATCH (book)<-[__sr__:`AUTHORED`]-(__srn__:`Author`) WITH collect(toString(id(book))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                          ^
The query used a deprecated function: `id`.
2023-08-11T15:27:16.054-05:00  WARN 16582 --- [nio-8080-exec-1] org.springframework.data.neo4j.cypher    : Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (book:`Book`) OPTIONAL MATCH (book)<-[__sr__:`AUTHORED`]-(__srn__:`Author`) WITH collect(toString(id(book))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                        ^
The query used a deprecated function: `id`.
2023-08-11T15:27:16.055-05:00  WARN 16582 --- [nio-8080-exec-1] org.springframework.data.neo4j.cypher    : Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (book:`Book`) OPTIONAL MATCH (book)<-[__sr__:`AUTHORED`]-(__srn__:`Author`) WITH collect(toString(id(book))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                               ^
The query used a deprecated function: `id`.
2023-08-11T15:27:16.067-05:00 DEBUG 16582 --- [nio-8080-exec-1] org.springframework.data.neo4j.cypher    : Executing:
MATCH (author:`Author`) WHERE toString(id(author)) IN $__ids__ OPTIONAL MATCH (author)-[__sr__:`AUTHORED`]->(__srn__:`Book`) WITH collect(toString(id(author))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
2023-08-11T15:27:16.090-05:00 TRACE 16582 --- [nio-8080-exec-1] org.springframework.data.neo4j.cypher    : with parameters:
:param __ids__ => [<all referenced ids trimmed for brevity>]
2023-08-11T15:27:16.852-05:00  WARN 16582 --- [nio-8080-exec-1] org.springframework.data.neo4j.cypher    : Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (author:`Author`) WHERE toString(id(author)) IN $__ids__ OPTIONAL MATCH (author)-[__sr__:`AUTHORED`]->(__srn__:`Book`) WITH collect(toString(id(author))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                            ^
The query used a deprecated function: `id`.
2023-08-11T15:27:16.853-05:00  WARN 16582 --- [nio-8080-exec-1] org.springframework.data.neo4j.cypher    : Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (author:`Author`) WHERE toString(id(author)) IN $__ids__ OPTIONAL MATCH (author)-[__sr__:`AUTHORED`]->(__srn__:`Book`) WITH collect(toString(id(author))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-08-11T15:27:16.853-05:00  WARN 16582 --- [nio-8080-exec-1] org.springframework.data.neo4j.cypher    : Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (author:`Author`) WHERE toString(id(author)) IN $__ids__ OPTIONAL MATCH (author)-[__sr__:`AUTHORED`]->(__srn__:`Book`) WITH collect(toString(id(author))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-08-11T15:27:16.854-05:00  WARN 16582 --- [nio-8080-exec-1] org.springframework.data.neo4j.cypher    : Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (author:`Author`) WHERE toString(id(author)) IN $__ids__ OPTIONAL MATCH (author)-[__sr__:`AUTHORED`]->(__srn__:`Book`) WITH collect(toString(id(author))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                       ^
The query used a deprecated function: `id`.
2023-08-11T15:27:16.862-05:00 DEBUG 16582 --- [nio-8080-exec-1] org.springframework.data.neo4j.cypher    : Executing:
MATCH (book:`Book`) WHERE toString(id(book)) IN $__ids__ OPTIONAL MATCH (book)<-[__sr__:`AUTHORED`]-(__srn__:`Author`) WITH collect(toString(id(book))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
2023-08-11T15:27:16.871-05:00 TRACE 16582 --- [nio-8080-exec-1] org.springframework.data.neo4j.cypher    : with parameters:
:param __ids__ => [<all referenced ids trimmed for brevity>]
2023-08-11T15:27:17.278-05:00  WARN 16582 --- [nio-8080-exec-1] org.springframework.data.neo4j.cypher    : Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (book:`Book`) WHERE toString(id(book)) IN $__ids__ OPTIONAL MATCH (book)<-[__sr__:`AUTHORED`]-(__srn__:`Author`) WITH collect(toString(id(book))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-08-11T15:27:17.279-05:00  WARN 16582 --- [nio-8080-exec-1] org.springframework.data.neo4j.cypher    : Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (book:`Book`) WHERE toString(id(book)) IN $__ids__ OPTIONAL MATCH (book)<-[__sr__:`AUTHORED`]-(__srn__:`Author`) WITH collect(toString(id(book))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                    ^
The query used a deprecated function: `id`.
2023-08-11T15:27:17.279-05:00  WARN 16582 --- [nio-8080-exec-1] org.springframework.data.neo4j.cypher    : Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (book:`Book`) WHERE toString(id(book)) IN $__ids__ OPTIONAL MATCH (book)<-[__sr__:`AUTHORED`]-(__srn__:`Author`) WITH collect(toString(id(book))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                   ^
The query used a deprecated function: `id`.
2023-08-11T15:27:17.279-05:00  WARN 16582 --- [nio-8080-exec-1] org.springframework.data.neo4j.cypher    : Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (book:`Book`) WHERE toString(id(book)) IN $__ids__ OPTIONAL MATCH (book)<-[__sr__:`AUTHORED`]-(__srn__:`Author`) WITH collect(toString(id(book))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                                               ^
The query used a deprecated function: `id`.
2023-08-11T15:27:17.297-05:00 DEBUG 16582 --- [nio-8080-exec-1] org.springframework.data.neo4j.cypher    : Executing:
MATCH (rootNodeIds:`Book`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS book, __sr__, __srn__ RETURN book AS __sn__, __sr__, __srn__
2023-08-11T15:27:17.326-05:00 TRACE 16582 --- [nio-8080-exec-1] org.springframework.data.neo4j.cypher    : with parameters:
:param rootNodeIds => [<all referenced ids trimmed for brevity>]
:param relatedNodeIds => [<all referenced ids trimmed for brevity>]
:param relationshipIds => [<all referenced ids trimmed for brevity>]
2023-08-11T15:27:29.545-05:00 ERROR 16582 --- [nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.TransientDataAccessResourceException: Server at 408637a4.databases.neo4j.io:7687 is no longer available; Error code 'N/A'] with root cause

org.neo4j.driver.exceptions.ServiceUnavailableException: Connection to the database terminated. Please ensure that your database is listening on the correct host and port and that you have compatible encryption settings both on Neo4j server and driver. Note that the default encryption setting has changed in Neo4j 4.0.
	at org.neo4j.driver.internal.util.ErrorUtil.newConnectionTerminatedError(ErrorUtil.java:48) ~[neo4j-java-driver-5.9.0.jar:5.9.0-1250b2d94997ae49e5a623c52f61636505185057]
	at org.neo4j.driver.internal.util.ErrorUtil.newConnectionTerminatedError(ErrorUtil.java:42) ~[neo4j-java-driver-5.9.0.jar:5.9.0-1250b2d94997ae49e5a623c52f61636505185057]
	at org.neo4j.driver.internal.async.inbound.ChannelErrorHandler.channelInactive(ChannelErrorHandler.java:67) ~[neo4j-java-driver-5.9.0.jar:5.9.0-1250b2d94997ae49e5a623c52f61636505185057]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:305) ~[netty-transport-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281) ~[netty-transport-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274) ~[netty-transport-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:411) ~[netty-codec-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:376) ~[netty-codec-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:305) ~[netty-transport-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281) ~[netty-transport-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274) ~[netty-transport-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:411) ~[netty-codec-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:376) ~[netty-codec-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:305) ~[netty-transport-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281) ~[netty-transport-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274) ~[netty-transport-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:411) ~[netty-codec-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:376) ~[netty-codec-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.handler.ssl.SslHandler.channelInactive(SslHandler.java:1085) ~[netty-handler-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:305) ~[netty-transport-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281) ~[netty-transport-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274) ~[netty-transport-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405) ~[netty-transport-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301) ~[netty-transport-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281) ~[netty-transport-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901) ~[netty-transport-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813) ~[netty-transport-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174) ~[netty-common-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167) ~[netty-common-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470) ~[netty-common-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566) ~[netty-transport-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.94.Final.jar:4.1.94.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.94.Final.jar:4.1.94.Final]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

